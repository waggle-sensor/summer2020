Sample Code Notes

PyImageSearch
1. Uses YOLO for person detection
2. Only videos
3. Does not do any camera calibration or image transformation, only calculates pixel distance between centroids of bounding boxes, not accurate far from camera
4. Does not account for groups of people walking together

Rocket Engines (YouTube Series)
1. Uses MobileNet SSD for person detection
2. Only videos
3. No camera calibration or image transformation
4. No group detection
5. *** Uses a different centroid tracking algorithm than PyImageSearch that returns the bounding box instead of the centroid

ParthPathak27 (https://github.com/ParthPathak27/Social-Distancing-Detector)
1. Separate files for image, video, and live camera
2. YoloV3 person detection
3. No Camera callibrartion
4. Uses NMS algorithm on bounding boxes

Subikshaa (https://github.com/Subikshaa/Social-Distance-Detection-using-OpenCV)
1. Focuses on depth, camera angle is chest height
2. Uses set value for focal length and approximate height of the two people in sample video, calculates distance using same method as PyImageSearch's Distance From Camera tutorial, so not useful in my case because I don't have focal length

